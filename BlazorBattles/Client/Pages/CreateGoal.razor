@page "/creategoal"
@attribute [Authorize]

<h3>CreateGoal</h3>
<br />


<EditForm EditContext="@editContext" OnValidSubmit="CreateCalendar">
    <div class="form-group">
        <label for="startDate">Start Date</label>
        <InputDate id="startDate" @bind-Value="totalGoalBuilder.startDate" class="form-control"></InputDate>
    </div>

    <div class="form-group">
        <label for="duration">Duration</label>
        <InputNumber id="duration" @bind-Value="totalGoalBuilder.duration" class="form-control"></InputNumber>
    </div>

    <div class="form-group">
        <label for="endDate">End Date</label>
        <InputDate id="endDate" @bind-Value="totalGoalBuilder.endDate" class="form-control"></InputDate>

    </div>

    <div class="form-group">
        <label for="week">Days</label><br />
        <InputRadioGroup id="week" @bind-Value="totalGoalBuilder.calendarValue" class="form-control">
            <InputRadio Value="0" /><span style="padding-left:5px;"> All days</span>
            <InputRadio Value="1" /><span style="padding-left:5px;"> Working Days</span>
            <InputRadio Value="2" /><span style="padding-left:5px;"> Custum</span>
        </InputRadioGroup>
    </div>

    <div class="form-group">
        <label for="monday">
            Monday
            <InputCheckbox disabled="@daysAreDisabled" id="monday" @bind-Value=totalGoalBuilder.Monday class="form-check"></InputCheckbox>
        </label>
        <label for="tuesday">
            Tuesday
            <InputCheckbox disabled="@daysAreDisabled" id="tuesday" @bind-Value=totalGoalBuilder.Tuesday class="form-check"></InputCheckbox>
        </label>
        <label for="wednesday">
            Wednesday
            <InputCheckbox disabled="@daysAreDisabled" id="wednesday" @bind-Value=totalGoalBuilder.Wednesday class="form-check"></InputCheckbox>
        </label>
        <label for="thursday">
            Thursday
            <InputCheckbox disabled="@daysAreDisabled" id="thursday" @bind-Value=totalGoalBuilder.Thursday class="form-check"></InputCheckbox>
        </label>
        <label for="friday">
            Friday
            <InputCheckbox disabled="@daysAreDisabled" id="friday" @bind-Value=totalGoalBuilder.Friday class="form-check"></InputCheckbox>
        </label>
        <label for="saturday">
            Saturday
            <InputCheckbox disabled="@daysAreDisabled" id="saturday" @bind-Value=totalGoalBuilder.Saturday class="form-check"></InputCheckbox>
        </label>
        <label for="sunday">
            Sunday
            <InputCheckbox disabled="@daysAreDisabled" id="sunday" @bind-Value=totalGoalBuilder.Sunday class="form-check"></InputCheckbox>
        </label>
    </div>


    <br />
    <button type="submit" class="btn btn-primary">Generate plan preview</button>

</EditForm>

<br />

@if (isCalendarVissible)
{
    <h3> Calendar</h3>

    <table class="table">
        <thead>
            <tr>
                <th>Monday</th>
                <th>TuesDay</th>
                <th>Wednesday</th>
                <th>Thursday</th>
                <th>Friday</th>
                <th>Saturday</th>
                <th>Sunday</th>
            </tr>
        </thead>
        <tbody>
            @while (currentCalendarDay < totalGoalBuilder.endDate)
            {
                @if (lastPrintedMonth != currentCalendarDay.Month)
                {
                    <tr>
                        <td colspan="7"><h3>@currentCalendarDay.ToString("MMMM yyyy")</h3></td>
                    </tr>
                    lastPrintedMonth = currentCalendarDay.Month;
                }
                <tr>
                    @for (int j = 0; j < 7; j++)
                    {
                        @if (currentCalendarDay < totalGoalBuilder.startDate || currentCalendarDay > totalGoalBuilder.endDate)
                        {
                            <td style="color: grey; font-weight: 200;"> @currentCalendarDay.ToString("dd")</td>
                        }
                        else
                        {
                            <td style="@GetStyle(currentCalendarDay)"> @currentCalendarDay.ToString("dd")</td>                            
                        }
                        currentCalendarDay = currentCalendarDay.AddDays(1);
                    }
                </tr>
            }
        </tbody>
    </table>
}



@code {

    public DateTime currentCalendarDay { get; set; }


    private int lastPrintedMonth = -1;
    private bool isCalendarVissible = false;

    private bool daysAreDisabled { get; set; } = true;

    TotalGoalBuilder totalGoalBuilder = new TotalGoalBuilder();


    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(totalGoalBuilder);

        editContext.OnFieldChanged += EditContext_OnFieldChanged;

        base.OnInitialized();
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        isCalendarVissible = false;
        if (e.FieldIdentifier.FieldName == "startDate")
        {
            totalGoalBuilder.endDate = totalGoalBuilder.startDate.AddDays(totalGoalBuilder.duration);
        }

        else if (e.FieldIdentifier.FieldName == "duration")
        {
            totalGoalBuilder.endDate = totalGoalBuilder.startDate.AddDays(totalGoalBuilder.duration);
        }

        else if (e.FieldIdentifier.FieldName == "endDate")
        {
            totalGoalBuilder.duration = (totalGoalBuilder.endDate - totalGoalBuilder.startDate).Days;
        }
        else if (e.FieldIdentifier.FieldName == "calendarValue")
        {
            if (totalGoalBuilder.calendarValue == 0)
            {

                daysAreDisabled = true;

                totalGoalBuilder.Monday = true;
                totalGoalBuilder.Tuesday = true;
                totalGoalBuilder.Wednesday = true;
                totalGoalBuilder.Thursday = true;
                totalGoalBuilder.Friday = true;
                totalGoalBuilder.Saturday = true;
                totalGoalBuilder.Sunday = true;
            }

            else if (totalGoalBuilder.calendarValue == 1)
            {

                daysAreDisabled = true;

                totalGoalBuilder.Monday = true;
                totalGoalBuilder.Tuesday = true;
                totalGoalBuilder.Wednesday = true;
                totalGoalBuilder.Thursday = true;
                totalGoalBuilder.Friday = true;
                totalGoalBuilder.Saturday = false;
                totalGoalBuilder.Sunday = false;
            }
            else
            {
                daysAreDisabled = false;
            }
        }
    }


    private void CreateCalendar()
    {
        lastPrintedMonth = -1;
        isCalendarVissible = true;
        var startDayNumber = (int)totalGoalBuilder.startDate.DayOfWeek;
        startDayNumber = startDayNumber == 0 ? 7 : startDayNumber;
        Console.WriteLine("Start dayrt numbet " + startDayNumber);
        currentCalendarDay = totalGoalBuilder.startDate.AddDays(-startDayNumber + 1);
        Console.WriteLine("Calendar Created. First day in week " + currentCalendarDay);
    }


    private string GetStyle(DateTime currentCalendarDay)
    {
        PropertyInfo pinfo = typeof(TotalGoalBuilder).GetProperty(currentCalendarDay.DayOfWeek.ToString());
        Console.WriteLine(currentCalendarDay.DayOfWeek.ToString());
        Console.WriteLine("PInfo: " + pinfo);

        if ((bool)pinfo.GetValue(totalGoalBuilder, null))
        {
            return "color: green; font-weight: 600;";
        }
        return "font-weight: 400;";

    }
}


